
name: アーティファクト自動リリース

on:
  push:
    branches: [ master ]
    # tags:
    #   - 'v*'
  # pull_request:
  #   branches: [ master ]
  #   tags:
  #     - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: チェックアウト中
      uses: actions/checkout@v2
    - name: JDK17 を準備中
      uses: actions/setup-java@v2 # actions/setup-java@v1
      with:
        distribution: "adopt"
        java-version: "17.0.10+7"
    - name: キャッシュ
      uses: actions/cache@v3.2.3 # actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Gradlew へ権限を付与
      run: chmod +x gradlew
    - name: build.gradle の変数取得
      id: set_variable
      run: |
        echo "name=$(gradle -q properties | grep -oP '^name:\s*\K.*')" >> $GITHUB_ENV
        echo "version=$(gradle -q properties | grep -oP '^version:\s*\K.*')" >> $GITHUB_ENV
        echo "group=$(gradle -q properties | grep -oP '^group:\s*\K.*')" >> $GITHUB_ENV
    - name: Gradle-ShadowJar でアーティファクトをビルド
      run: ./gradlew shadowjar
    - name: リリースタグ形式を設定
      env:
        TZ: 'Asia/Tokyo'
      run: echo "release_tag=$(date +'%Y-%m-%d_%H%M%S')" >> $GITHUB_ENV
    - name: タグを生成 v${{ env.version }}
      uses: rickstaa/action-create-tag@v1
      with:
        tag: v${{ env.version }}
        message: ""
    - name: リリースを生成
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.version }}
        release_name: 📁リリース v${{ env.version }}
        draft: false
        prerelease: false
    - name: アセットをアップロード
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ github.event.repository.name }}.jar
        asset_name: ${{ github.event.repository.name }}-${{ env.version }}.jar
        asset_content_type: application/zip
