name: Mavenレポジトリへデプロイ

on:
  pull_request:
    branches:
      - master
    types: [closed]
  push:
    branches:
      - master

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: チェックアウト - Master
        uses: actions/checkout@v3
      # - name: Javaを準備中
      #   uses: actions/setup-java@v1
      #   with:
      #     java-version: 1.8
      - name: キャッシュ を準備中
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle
          key: maven-repository-${{ github.sha }}
          restore-keys: |
            maven-repository-
      # - id: set_variable
      #   name: build.gradle の変数取得
      #   run: |
      #     echo "name=$(gradle -q properties | grep -oP '^name:\s*\K.*')" >> "$GITHUB_OUTPUT"
      #     echo "version=$(gradle -q properties | grep -oP '^version:\s*\K.*')" >> "$GITHUB_OUTPUT"
      #     echo "group=$(gradle -q properties | grep -oP '^group:\s*\K.*')" >> "$GITHUB_OUTPUT"
      # - name: ディレクトリチェック
      #   continue-on-error: true
      #   id: folder_check
      #   shell: bash
      #   run: |
      #     NAME=$(echo ${{ steps.set_variable.outputs.name  }} | sed 's/[A-Z]/\L&/g')
      #     GROUP=$(echo ${{ steps.set_variable.outputs.group  }} | sed 's/\./\//g')
      #     VERSION=${{ steps.set_variable.outputs.version  }}
      #     mkdir -p ./maven/$GROUP/$NAME/
      #     cd ./maven/$GROUP/$NAME/
      #     ls -ls
      #     if [ -d "./maven/$GROUP/$NAME/$VERSION/" ]; then
      #       echo "バージョンが既存するため処理を終了しました"
      #       exit 1
      #     else
      #         echo "バージョンが存在しません"
      #     fi
      - name: Mavenリポジトリを作成中
        run: gradle publish --warning-mode all
        env:
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Mavenブランチにプッシュ
        shell: bash
        run: |
          echo git 設定初期化
          git config --global user.email "Hiyuuu@github.com"
          git config --global user.name "github-actions[bot]"
          
          echo maven レポジトリへチェックアウト
          git checkout -b maven
          
          echo master ブランチからファイルをコピー
          git checkout master -- maven
          mv ./maven/* ./


          # echo pull maven
          # git pull maven
          # echo checkout maven
          # git checkout -b maven

          # # git checkout maven
          # # git checkout --orphan maven
          # # git rm -rf .
          # echo copy master to maven repository
          # git checkout master -- maven
          # 
          # rm -R ./maven
          
          # ls -l
          # # git rm -rf ./.gradle
          # # git rm -rf ./build
          
          echo ファイルをコミット
          tree
          git add .
          git commit --allow-empty -m "added to maven repository"
          
          echo ファイルをプッシュ
          git push -f --set-upstream origin maven
      - name: ページをセットアップ中
        uses: actions/configure-pages@v3
      - name: ページをビルド中 (Jekyll)
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./maven
          destination: ./_site
      - name: アーティファクトをアップロード中
        uses: actions/upload-pages-artifact@v2
  deploy:
    environment:
      name: GithubPages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Github Pages へデプロイ中
        id: deployment
        uses: actions/deploy-pages@v2
